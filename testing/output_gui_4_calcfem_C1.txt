self.region_parameters = {'0': {'coordinates': [(0.0, 0.0), (1.0, 0.0), (1.5, 1.0), (0.5, 0.5), (0.0, 0.5), (0.0, 0.0)], 'area_neg_pos': 'Positive', 'material': {'k': 0.5, 'c': 340, 'rho': 1.21}}}
self.boundary_parameters = {'0': {'coordinates': [(0.0, 0.0), (1.0, 0.0)], 'bc': {'type': 'Robin', 'value': [10.0, 0.1]}}, '1': {'coordinates': [(1.0, 0.0), (1.5, 1.0)], 'bc': {'type': 'Robin', 'value': [20.0, 0.2]}}, '2': {'coordinates': [(1.5, 1.0), (0.5, 0.5)], 'bc': {'type': 'Robin', 'value': [5.0, 0.2]}}, '3': {'coordinates': [(0.5, 0.5), (0.0, 0.5)], 'bc': {'type': 'Dirichlet', 'value': 0.0}}, '4': {'coordinates': [(0.0, 0.5), (0.0, 0.0)], 'bc': {'type': 'Robin', 'value': [30.0, 0.1]}}}
self.node_parameters = {'0': {'coordinates': (0.0, 0.0), 'bc': {'type': None, 'value': None}}, '1': {'coordinates': (1.0, 0.0), 'bc': {'type': None, 'value': None}}, '2': {'coordinates': (1.5, 1.0), 'bc': {'type': None, 'value': None}}, '3': {'coordinates': (0.5, 0.5), 'bc': {'type': None, 'value': None}}, '4': {'coordinates': (0.0, 0.5), 'bc': {'type': None, 'value': None}}}
self.calculation_parameters = {'mesh_density': 2, 'freq': None, 'equation': 'HE', 'units': 'm'}
self.nodes_mesh_gen = np.array([np.array([0.25, 0.25]), np.array([0.5 , 0.25]), np.array([0.75, 0.25]), np.array([1.  , 0.25]), np.array([0.75, 0.5 ]), np.array([1. , 0.5]), np.array([1.25, 0.75]), np.array([0., 0.]), np.array([0.25, 0.  ]), np.array([0.5, 0. ]), np.array([0.75, 0.  ]), np.array([1., 0.]), np.array([1.125, 0.25 ]), np.array([1.25, 0.5 ]), np.array([1.375, 0.75 ]), np.array([1.5, 1. ]), np.array([1.25 , 0.875]), np.array([1.  , 0.75]), np.array([0.75 , 0.625]), np.array([0.5, 0.5]), np.array([0.25, 0.5 ]), np.array([0. , 0.5]), np.array([0.  , 0.25])])
self.single_nodes_dict = {'0': 7, '1': 11, '2': 15, '3': 19, '4': 21}
self.boundary_nodes_dict = {'0': [[7, np.array([0., 0.])], [8, np.array([0.25, 0.  ])], [9, np.array([0.5, 0. ])], [10, np.array([0.75, 0.  ])], [11, np.array([1., 0.])]], '1': [[11, np.array([1., 0.])], [12, np.array([1.125, 0.25 ])], [13, np.array([1.25, 0.5 ])], [14, np.array([1.375, 0.75 ])], [15, np.array([1.5, 1. ])]], '2': [[15, np.array([1.5, 1. ])], [16, np.array([1.25 , 0.875])], [17, np.array([1.  , 0.75])], [18, np.array([0.75 , 0.625])], [19, np.array([0.5, 0.5])]], '3': [[19, np.array([0.5, 0.5])], [20, np.array([0.25, 0.5 ])], [21, np.array([0. , 0.5])]], '4': [[21, np.array([0. , 0.5])], [22, np.array([0.  , 0.25])], [7, np.array([0., 0.])]]}
self.triangulation = np.array([np.array([16., 14., 15.]), np.array([12.,  3., 11.]), np.array([14.,  6., 13.]), np.array([ 6., 14., 16.]), np.array([17.,  6., 16.]), np.array([19.,  4., 18.]), np.array([ 5., 12., 13.]), np.array([12.,  5.,  3.]), np.array([ 5., 17., 18.]), np.array([ 4.,  5., 18.]), np.array([22.,  8.,  0.]), np.array([ 8., 22.,  7.]), np.array([20., 22.,  0.]), np.array([22., 20., 21.]), np.array([ 3., 10., 11.]), np.array([10.,  3.,  2.]), np.array([8., 1., 0.]), np.array([1., 8., 9.]), np.array([10.,  1.,  9.]), np.array([ 1., 10.,  2.]), np.array([19., 20.,  0.]), np.array([ 1., 19.,  0.]), np.array([19.,  1.,  2.]), np.array([ 4., 19.,  2.]), np.array([ 5.,  6., 17.]), np.array([ 6.,  5., 13.]), np.array([3., 5., 2.]), np.array([5., 4., 2.])])
self.triangulation_region_dict = {'0': range(0, 28)}
