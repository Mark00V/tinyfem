self.region_parameters = {'0': {'coordinates': [(0.0, 0.0), (1.0, 0.0), (1.0, 1.0), (0.0, 1.0), (0.0, 0.0)], 'area_neg_pos': 'Positive', 'material': {'k': 0.5, 'c': 340, 'rho': 1.21}}}
self.boundary_parameters = {'0': {'coordinates': [(0.0, 0.0), (1.0, 0.0)], 'bc': {'type': 'Robin', 'value': [100, 0.5]}}, '1': {'coordinates': [(1.0, 0.0), (1.0, 1.0)], 'bc': {'type': None, 'value': None}}, '2': {'coordinates': [(1.0, 1.0), (0.0, 1.0)], 'bc': {'type': 'Dirichlet', 'value': 10.0}}, '3': {'coordinates': [(0.0, 1.0), (0.0, 0.0)], 'bc': {'type': None, 'value': None}}}
self.node_parameters = {'0': {'coordinates': (0.0, 0.0), 'bc': {'type': None, 'value': None}}, '1': {'coordinates': (1.0, 0.0), 'bc': {'type': None, 'value': None}}, '2': {'coordinates': (1.0, 1.0), 'bc': {'type': None, 'value': None}}, '3': {'coordinates': (0.0, 1.0), 'bc': {'type': None, 'value': None}}}
self.calculation_parameters = {'mesh_density': 2, 'freq': None, 'equation': 'HE', 'units': 'm'}
self.nodes_mesh_gen = np.array([np.array([0.25, 0.25]), np.array([0.5 , 0.25]), np.array([0.75, 0.25]), np.array([0.25, 0.5 ]), np.array([0.5, 0.5]), np.array([0.75, 0.5 ]), np.array([0.25, 0.75]), np.array([0.5 , 0.75]), np.array([0.75, 0.75]), np.array([0., 0.]), np.array([0.25, 0.  ]), np.array([0.5, 0. ]), np.array([0.75, 0.  ]), np.array([1., 0.]), np.array([1.  , 0.25]), np.array([1. , 0.5]), np.array([1.  , 0.75]), np.array([1., 1.]), np.array([0.75, 1.  ]), np.array([0.5, 1. ]), np.array([0.25, 1.  ]), np.array([0., 1.]), np.array([0.  , 0.75]), np.array([0. , 0.5]), np.array([0.  , 0.25])])
self.single_nodes_dict = {'0': 9, '1': 13, '2': 17, '3': 21}
self.boundary_nodes_dict = {'0': [[9, np.array([0., 0.])], [10, np.array([0.25, 0.  ])], [11, np.array([0.5, 0. ])], [12, np.array([0.75, 0.  ])], [13, np.array([1., 0.])]], '1': [[13, np.array([1., 0.])], [14, np.array([1.  , 0.25])], [15, np.array([1. , 0.5])], [16, np.array([1.  , 0.75])], [17, np.array([1., 1.])]], '2': [[17, np.array([1., 1.])], [18, np.array([0.75, 1.  ])], [19, np.array([0.5, 1. ])], [20, np.array([0.25, 1.  ])], [21, np.array([0., 1.])]], '3': [[21, np.array([0., 1.])], [22, np.array([0.  , 0.75])], [23, np.array([0. , 0.5])], [24, np.array([0.  , 0.25])], [9, np.array([0., 0.])]]}
self.triangulation = np.array([np.array([14., 12., 13.]), np.array([12., 14.,  2.]), np.array([18., 16., 17.]), np.array([16., 18.,  8.]), np.array([14.,  5.,  2.]), np.array([ 5., 14., 15.]), np.array([ 5., 16.,  8.]), np.array([16.,  5., 15.]), np.array([10., 24.,  9.]), np.array([24., 10.,  0.]), np.array([5., 1., 2.]), np.array([1., 5., 4.]), np.array([ 1., 12.,  2.]), np.array([12.,  1., 11.]), np.array([10.,  1.,  0.]), np.array([ 1., 10., 11.]), np.array([22., 20., 21.]), np.array([20., 22.,  6.]), np.array([5., 7., 4.]), np.array([7., 5., 8.]), np.array([18.,  7.,  8.]), np.array([ 7., 18., 19.]), np.array([ 7., 20.,  6.]), np.array([20.,  7., 19.]), np.array([1., 3., 0.]), np.array([3., 1., 4.]), np.array([3., 7., 6.]), np.array([7., 3., 4.]), np.array([ 3., 24.,  0.]), np.array([24.,  3., 23.]), np.array([22.,  3.,  6.]), np.array([ 3., 22., 23.])])
self.triangulation_region_dict = {'0': range(0, 32)}
